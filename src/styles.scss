
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$DA_Bubble-primary: mat.define-palette(mat.$indigo-palette);
$DA_Bubble-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$DA_Bubble-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$DA_Bubble-theme: mat.define-light-theme((
  color: (
    primary: $DA_Bubble-primary,
    accent: $DA_Bubble-accent,
    warn: $DA_Bubble-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($DA_Bubble-theme);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($DA_Bubble-theme);

@import './colors.scss';

@font-face {
  font-family: "Nunito", sans-serif;
  font-style: normal;
  font-weight: 400;
  src: local(""),
    url("./assets/fonts/Nunito/Nunito-VariableFont_wght.ttf") format("ttf");
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
  /* border: solid 1px */
}

/*
    2. Remove default margin
  */
* {
  margin: 0;
  padding: 0;
}

/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
app-main-content{
  flex: 1;
}

body {
  font-family: "Nunito", sans-serif;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;

}

html {
  scroll-behavior: smooth;
}

/*
    5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
    6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
  border: unset;
  font: inherit;
}

/*
    7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/*
    8. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}


$b-radius-1: 1.875rem; //30px
$b-radius-2: 3.125rem; //50px

html,
body {
  height: 100%;

}

body {
  margin: 0;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
